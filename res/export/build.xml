<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================================ -->
<!-- GENERIC JAVA APPLICATION EXPORT SCRIPT           -->
<!-- Note: 
     this script isnt meant to be executed directly.
     you should call it from another ant file and define
     / override some properties for your project e.g.
     
	<ant dir="../FieldKit/res/export/">
		<property name="project.name" value="HelloTest" />
		<property name="project.main" value="field.test.export.HelloTest" />
		<property name="project.dir" location="./" />

		<property name="libraries.jar.dir" value="../" />
		<property name="libraries.jar.includes" value="hapticscript/lib/*.jar,libP5/core.jar,libP5/opengl.jar,libP5/jogl.jar,libP5/gluegen-rt.jar" />
	</ant>
	
	TODO could implement <outofdate> to improve performance
	http://ant-contrib.sourceforge.net/tasks/tasks/outofdate.html
-->
<!-- ================================================ -->
<project name="application" default="dist">
	<!-- ================================================ -->
	<!-- CONFIGURATION                                    -->
	<!-- ================================================ -->
	<!-- PROJECT -->
	<property name="project.name" value="FieldSketch" />
	<property name="project.version" value="1.0" />
	<property name="project.author" value="Marcus Wendt (www.field.io)" />
	<property name="project.main" value="" />
	<property name="project.dir" location="./" />

	<property name="clean" value="true" />

	<!-- DISTRIBUTIONS -->
	<property name="dist.osx" value="true" />
	<property name="dist.win" value="false" />
	<property name="dist.lin" value="false" />
	<property name="dist.src" value="false" />

	<!-- SOURCE -->
	<property name="source.dir" location="${project.dir}/src" />
	<property name="source.dir.includes" value="**" />
	<property name="source.dir.excludes" value="" />

	<!-- LIBRARIES -->
	<property name="libraries.dir" value="${project.dir}/lib" />
	<property name="libraries.includes" value="*.*" />

	<!-- DATA -->
	<property name="data.internal.dir" value="${project.dir}" />
	<property name="data.internal.includes" value="data/**" />
	<property name="data.internal.excludes" value="" />

	<property name="data.external.dir" value="${project.dir}/res" />
	<property name="data.external.includes" value="**" />
	<property name="data.external.excludes" value="**export**" />

	<!-- TMP -->
	<property name="tmp.dir" location="./tmp" />
	<property name="tmp.bin" location="${tmp.dir}/bin" />
	<property name="tmp.src" location="${tmp.dir}/src" />
	<property name="tmp.lib" location="${tmp.dir}/lib" />

	<!-- BUILD -->
	<property name="build.name" value="${project.name}" />
	<property name="build.dir" location="${project.dir}/build" />
	<property name="build.jar.name" value="${build.name}.jar" />
	<property name="build.jar" location="${tmp.dir}/${build.jar.name}" />

	<!-- SYSTEM -->
	<tstamp>
		<format property="system.now" pattern="yyyy_MM_dd-HH_mm" />
	</tstamp>
	<!-- java -->
	<property name="system.javac.target" value="1.5" />

	<!-- scala -->
	<property name="system.scala.home" value="/opt/local/share/scala/" />
	<property name="system.scalac.target" value="jvm-1.5" />
	<property name="system.scala-library.jar" value="${system.scala.home}lib/scala-library.jar" />

	<!-- ================================================ -->
	<!-- PATHS & FILES                                    -->
	<!-- ================================================ -->
	<path id="source.dir.path">
		<pathelement path="${source.dir}" />
	</path>
	<fileset id="source.dir.fs" dir="${source.dir}" />

	<fileset id="libraries.jar" dir="${tmp.lib}" includes="*.jar" />
	<fileset id="data.internal" dir="${data.internal.dir}" includes="${data.internal.includes}" excludes="${data.internal.excludes}" />
	<fileset id="data.external" dir="${data.external.dir}" includes="${data.external.includes}" excludes="${data.external.excludes}" />

	<!-- ================================================ -->
	<!-- LOAD EXTRA TASKS                                 -->
	<!-- ================================================ -->
	<!-- load ant contrib tasks -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="lib/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<!-- load scala ant tasks -->
	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath>
			<pathelement location="${system.scala.home}/lib/scala-compiler.jar" />
			<pathelement location="${system.scala-library.jar}" />
		</classpath>
	</taskdef>

	<!-- load envgen template processor task -->
	<taskdef name="envgen" classname="com.basilv.envgen.EnvGenTask">
		<classpath>
			<pathelement location="lib/EnvGen-with-dependencies.jar" />
		</classpath>
	</taskdef>

	<!-- ================================================ -->
	<!-- UTILITY TARGETS                                  -->
	<!-- ================================================ -->
	<target name="init" description="creates the build structure">
		<delete dir="${tmp.dir}" />
		<mkdir dir="${tmp.bin}" />
		<mkdir dir="${tmp.lib}" />
		<mkdir dir="${tmp.src}" />
		<mkdir dir="${build.dir}" />
	</target>

	<target name="compile">
		<!-- addparams="-optimise" -->
		<scalac target="${system.scalac.target}" destdir="${tmp.bin}">
			<src refid="source.dir.path" />

			<include name="${source.dir.includes}" />
			<exclude name="${source.dir.excludes}" />

			<classpath>
				<pathelement location="${system.scala-library.jar}" />
				<fileset dir="${tmp.lib}" includes="*.jar" />
			</classpath>
		</scalac>

		<!--
		<javac target="${system.javac.target}" destdir="${build.tmp}" executable="${system.javac}">
			<src refid="source.dir" />
			<exclude name="**test**" />
			<exclude name="**Test**" />
			<classpath>
				<fileset refid="libraries.jar" />
			</classpath>
		</javac>
		-->
	</target>

	<target name="jar" description="creates a .jar file from the compiled sources">
		<!-- create project .jar -->
		<jar jarfile="${build.jar}" basedir="${tmp.bin}" index="true" filesetmanifest="skip">
			<manifest>
				<attribute name="Project" value="${project.name}" />
				<attribute name="Version" value="${project.version}" />
				<attribute name="Built-By" value="${project.author}" />
				<attribute name="Build-Date" value="${system.now}" />
				<attribute name="Main-Class" value="${project.main}" />
			</manifest>

			<fileset dir="${tmp.bin}" />
			<fileset refid="data.internal" />
		</jar>
	</target>

	<target name="fieldkit" description="compiles the fieldkit library and copies it to the tmp.lib dir">
		<echo>compiling fieldkit...</echo>
		<ant dir="../../">
			<property name="project.name" value="FieldKit" />
		</ant>
		<echo>copying fieldkit...</echo>
		<copy todir="${tmp.lib}" flatten="true" includeemptydirs="false">
			<fileset dir="../../build/FieldKit/" />
		</copy>
	</target>

	<target name="libraries" description="copies the projects libraries into the temp folder">
		<available file="${libraries.dir}" type="dir" property="project.lib.present" />
		<if>
			<equals arg1="${project.lib.present}" arg2="true" />
			<then>
				<echo>copying libraries...</echo>
				<copy todir="${tmp.lib}" flatten="true" includeemptydirs="false">
					<fileset dir="${libraries.dir}" includes="${libraries.includes}" />
				</copy>
			</then>
		</if>
	</target>

	<target name="source" description="copies the projects sources into the temp folder">
		<echo>copying sources...</echo>
		<copy todir="${tmp.src}" includeemptydirs="true">
			<fileset dir="${source.dir}" />
		</copy>
	</target>

	<!-- ================================================ -->
	<!-- DISTRIBUTION                                     -->
	<!-- ================================================ -->
	<target name="dist">
		<echo>===========================================================</echo>
		<echo>Building ${build.name} ...</echo>
		<echo>===========================================================</echo>
		<echo>Project ${project.dir}</echo>
		<echo>Source ${source.dir}</echo>
		<echo>Build ${build.dir}</echo>
		<echo>Tmp ${tmp.dir}</echo>
		<echo>-----------------------------------------------------------</echo>

		<echo>preparing...</echo>
		<if>
			<equals arg1="${clean}" arg2="true" />
			<then>
				<antcall target="init" />
				<antcall target="fieldkit" />
				<antcall target="libraries" />
			</then>
		</if>
		<antcall target="source" />
		<antcall target="compile" />
		<antcall target="jar" />

		<echo>creating distributions...</echo>
		<if>
			<equals arg1="${dist.osx}" arg2="true" />
			<then>
				<ant antfile="osx/build.xml" inheritRefs="true" />
			</then>
		</if>

		<if>
			<equals arg1="${dist.win}" arg2="true" />
			<then>
				<ant antfile="win/build.xml" inheritRefs="true" />
			</then>
		</if>

		<if>
			<equals arg1="${dist.src}" arg2="true" />
			<then>
				<ant antfile="src.xml" inheritRefs="true" />
			</then>
		</if>

		<echo>done</echo>
	</target>

	<!-- ================================================ -->
	<!-- RUN		                                      -->
	<!-- ================================================ -->
	<!--
	<target name="run" depends="compile">
		<echo>==============================</echo>
		<echo>Starting ${build.name}...</echo>
		<echo>(${project.main})</echo>
		<echo>==============================</echo>

		<java classname="${project.main}" fork="true" dir="./" classpath="${build.tmp}" maxmemory="500m">
			<jvmarg value="-Djava.library.path=${libraries.native.dir}" />
			<classpath>
				<pathelement location="${system.scala-library.jar}" />
				<pathelement location="./" />
				<fileset refid="libraries.jar" />
			</classpath>
		</java>
	</target>
	-->
</project>